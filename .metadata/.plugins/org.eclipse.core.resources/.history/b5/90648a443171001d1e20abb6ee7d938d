package net.javaguides.springboot.controller;

	import java.util.List;

	import org.springframework.beans.factory.annotation.Autowired;
	import org.springframework.http.HttpStatus;
	import org.springframework.http.ResponseEntity;
	import org.springframework.web.bind.annotation.CrossOrigin;
	import org.springframework.web.bind.annotation.DeleteMapping;
	import org.springframework.web.bind.annotation.GetMapping;
	import org.springframework.web.bind.annotation.PathVariable;
	import org.springframework.web.bind.annotation.PostMapping;
	import org.springframework.web.bind.annotation.PutMapping;
	import org.springframework.web.bind.annotation.RequestBody;

	import org.springframework.web.bind.annotation.RequestMapping;
	import org.springframework.web.bind.annotation.RestController;

	import net.javaguides.springboot.exception.ResourceNotFoundException;
import net.javaguides.springboot.model.Appointment;
import net.javaguides.springboot.model.Bank;
import net.javaguides.springboot.repository.AppointmentRepository;
import net.javaguides.springboot.repository.BankRepository;
	//@CrossOrigin(origins = { "*"})
	@RestController
	//@CrossOrigin(origins = "*", allowedHeaders = "*")
	//@CrossOrigin(origins = "*", allowedHeaders = "*")

	@RequestMapping("/api/v1/appointment")
	@CrossOrigin(origins = "*",allowedHeaders = "*" )

	public class AppointmentController {
		@Autowired
		private AppointmentRepository appointmentRepository;
		@GetMapping
	    public List<Appointment> getAllAppointments(){
	        return appointmentRepository.findAll();
	    }

		@PostMapping
	    public Appointment createAppointment(@RequestBody Appointment appointment) {
	        return appointmentRepository.save(appointment);
	    }

	    // build get employee by id REST API
	    @GetMapping("{id}")
	    public ResponseEntity<Appointment> getAppointmentById(@PathVariable  long id){
	        Appointment appointment = appointmentRepository.findById(id)
	                .orElseThrow(() -> new ResourceNotFoundException("Appointment not exist with id:" + id));
	        return ResponseEntity.ok(appointment);
	    }

	    // build update employee REST API
	    @PutMapping("{id}")
	    public ResponseEntity<Appointment> updateAppointment(@PathVariable long id,@RequestBody Appointment appointmentDetails) {
	        Appointment updateAppointment = appointmentRepository.findById(id)
	                .orElseThrow(() -> new ResourceNotFoundException("appointment not exist with id: " + id));

	        updateAppointment.setBankName(appointmentDetails.getBankName());
	        updateAppointment.setName(appointmentDetails.getName());
	        updateAppointment.setAccountNo(appointmentDetails.getAccountNo());
	        updateAppointment.setLocation(appointmentDetails.getLocation());
	        updateAppointment.setDate(appointmentDetails.getDate());
	        updateAppointment.setTime(appointmentDetails.getTime());




	        appointmentRepository.save(updateAppointment);

	        return ResponseEntity.ok(updateAppointment);
	    }

	    // build delete employee REST API
	    @DeleteMapping("{id}")
	    public ResponseEntity<HttpStatus> deleteEmployee(@PathVariable long id){

	        Appointment appointment = appointmentRepository.findById(id)
	                .orElseThrow(() -> new ResourceNotFoundException("Appointment not exist with id: " + id));

	        appointmentRepository.delete(appointment);

	        return new ResponseEntity<>(HttpStatus.NO_CONTENT);

	    }


	}


